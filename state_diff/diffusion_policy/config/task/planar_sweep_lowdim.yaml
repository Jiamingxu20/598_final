name: planar_sweep_lowdim

obs_dim: 42 # 2*18(balls) + 2(pos) + 2*2(2points) = 42, 2*18(balls) + 2(pos) + 2(sincos) = 40
action_dim: 6 # 4 if using sincos; 6 if using 2points
keypoint_dim: 2
inv_hidden_dim: 256
num_agents: 1

obs_key: keypoint # pos_Balls
state_key: state
action_key: action # action1,action2 

env_runner:
  _target_: diffusion_policy.env_runner.push_keypoints_runner.PushKeypointsRunner
  keypoint_visible_rate: ${keypoint_visible_rate}
  n_train: 6
  n_train_vis: 2
  train_start_seed: 0
  n_test: 50
  n_test_vis: 4
  legacy_test: True
  test_start_seed: 100000
  max_steps: 500
  n_obs_steps: ${n_obs_steps}
  n_action_steps: ${n_action_steps}
  n_latency_steps: ${n_latency_steps}
  fps: 10
  agent_keypoints: False
  past_action: ${past_action_visible}
  n_envs: null
  obs_key: ${task.obs_key}
  state_key: ${task.state_key}
  action_key: ${task.action_key}
  visualize_state_denoising: True
  env_type: ${task.name}
  sincos_vs_2points: False

dataset:
  _target_: diffusion_policy.dataset.pusht_traj_dataset.PushTTrajLowdimDataset
  zarr_path: data/PlanarSweepingEnv_2points_goalL_single # PlanarSweepingEnv_2points_goalL_single; PlanarSweepingEnv_2points_goalI_single
  horizon: ${horizon}
  pad_before: ${eval:'${n_obs_steps}-1+${n_latency_steps}'}
  pad_after: ${eval:'${n_action_steps}-1'}
  seed: 42
  val_ratio: 0.02
  max_train_episodes: 300
  obs_key: ${task.obs_key}
  state_key: ${task.state_key}
  action_key: ${task.action_key}
  num_episodes: null
  action_dim: ${task.action_dim}

